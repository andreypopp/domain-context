// Generated by CoffeeScript 1.6.2
var domain;

domain = require('domain');

exports.init = function(init, domain) {
  if (domain == null) {
    domain = require('domain').active;
  }
  if (domain == null) {
    throw new Error('no active domain');
  }
  return domain.__context__ = init();
};

exports.cleanup = function(cleanup, domain) {
  if (domain == null) {
    domain = require('domain').active;
  }
  if (domain == null) {
    throw new Error('no active domain');
  }
  if ((cleanup != null) && (domain.__context__ != null)) {
    cleanup(domain.__context__);
  }
  return domain.__context__ = null;
};

exports.onError = function(onError, context, domain) {
  if (context == null) {
    context = null;
  }
  if (domain == null) {
    domain = require('domain').active;
  }
  if (onError != null) {
    onError(context || domain.__context__);
  }
  return domain.__context__ = null;
};

exports.get = function(key, domain) {
  if (domain == null) {
    domain = require('domain').active;
  }
  if (domain == null) {
    throw new Error('no active domain');
  }
  return domain.__context__[key];
};

exports.middleware = function(init, cleanup) {
  return function(req, res, next) {
    var _ref;

    if (typeof init !== 'function') {
      _ref = init, init = _ref.init, cleanup = _ref.cleanup;
    }
    domain = require('domain').active;
    exports.init(init, domain);
    res.on('finish', function() {
      return exports.cleanup(cleanup, domain);
    });
    req.__context__ = domain.__context__;
    return next();
  };
};

exports.middlewareOnError = function(onError) {
  return function(err, req, res, next) {
    if (typeof onError !== 'function') {
      onError = onError.onError;
    }
    exports.onError(onError, req.__context__);
    req.__context__ = null;
    return next(err);
  };
};
